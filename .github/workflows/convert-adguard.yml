name: Fetch and Convert AdGuard Type SRS

on:
  workflow_dispatch:
  schedule:
    - cron: \"0 8 * * 0\" # Каждое воскресенье в 8:00 утра по UTC

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download and Set Up sing-box
        run: |
          mkdir -p tmp/convert
          wget -O sing-box.tar.gz https://github.com/SagerNet/sing-box/releases/download/v1.10.0-alpha.25/sing-box-1.10.0-alpha.25-linux-amd64.tar.gz
          tar zxvf sing-box.tar.gz && rm sing-box.tar.gz
          cp sing-box-1.10.0-alpha.25-linux-amd64/sing-box tmp/convert/
          chmod +x tmp/convert/sing-box
          rm -r sing-box-1.10.0-alpha.25-linux-amd64

      - name: Fetch AdGuard DNS Filter Lists
        run: |
          wget -O tmp/convert/AdGuardDNSFilter.txt https://raw.githubusercontent.com/AdguardTeam/FiltersRegistry/master/filters/filter_15_DnsFilter/filter.txt

      - name: Convert with sing-box
        run: |
          cd tmp/convert
          for file in *.txt; do
            ./sing-box rule-set convert \"$file\" --output \"${file%.txt}.srs\" --type adguard || { echo \"Conversion failed for $file\"; exit 1; }
          done
          cd ../.. && rm -rf binary/adguard && mkdir -p binary/adguard
          cp tmp/convert/*.srs binary/adguard/
          rm -rf tmp && ls -l binary/adguard

      - name: Configure Git
        run: |
          git config --global user.name \"RichardMoor75\"
          git config --global user.email \"rishat.murtazin@gmail.com\"

      - name: Check for Changes and Commit
        run: |
          git add binary/adguard
          if git diff --cached --quiet; then
            echo \"No changes detected, skipping commit.\"
            echo \"changes=false\" >> $GITHUB_ENV
          else
            git commit -m \"actions: Update adguard type srs\"
            echo \"changes=true\" >> $GITHUB_ENV
          fi

      - name: Push Changes
        if: env.changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}
