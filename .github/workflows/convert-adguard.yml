name: Fetch and Convert AdGuard, RUAdList and Filter1 to SRS & MRS

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 0" # Каждое воскресенье в 8:00 утра по UTC

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download and install Mihomo and sing-box
        run: |
          mkdir -p tmp/convert
          # sing-box
          wget -O sing-box.tar.gz https://github.com/SagerNet/sing-box/releases/download/v1.10.0-alpha.25/sing-box-1.10.0-alpha.25-linux-amd64.tar.gz
          tar zxvf sing-box.tar.gz && rm sing-box.tar.gz
          cp sing-box-1.10.0-alpha.25-linux-amd64/sing-box tmp/convert/
          chmod +x tmp/convert/sing-box
          rm -r sing-box-1.10.0-alpha.25-linux-amd64
          # Mihomo (Clash.Meta)
          curl -s https://api.github.com/repos/MetaCubeX/mihomo/releases \
            | grep "browser_download_url.*mihomo-linux-amd64-alpha.*\\.deb" \
            | head -n 1 \
            | cut -d '"' -f 4 \
            | xargs wget -q -O mihomo-linux-amd64-alpha.deb
          sudo apt install --fix-missing ./mihomo-linux-amd64-alpha.deb

      - name: Fetch Filter Lists
        run: |
          mkdir -p tmp/convert
          wget -O tmp/convert/AdGuardDNSFilter.txt https://raw.githubusercontent.com/AdguardTeam/AdguardFilters/master/CyrillicFilters/common-sections/adservers.txt
          wget -O tmp/convert/RUAdList.txt https://easylist-downloads.adblockplus.org/ruadlist.txt
          wget -O tmp/convert/Filter1.txt https://adguardteam.github.io/HostlistsRegistry/assets/filter_1.txt
          if [ ! -f tmp/convert/AdGuardDNSFilter.txt ] || [ ! -f tmp/convert/RUAdList.txt ] || [ ! -f tmp/convert/Filter1.txt ]; then
            echo "Failed to download filter files"
            exit 1
          fi

      - name: Convert to SRS and MRS
        run: |
          cd tmp/convert

          echo "Converting AdGuardDNSFilter.txt to .srs..."
          ./sing-box rule-set convert "AdGuardDNSFilter.txt" --output "AdGuardDNSFilter.srs" --type adguard || { echo "Conversion to .srs failed"; exit 1; }

          echo "Preparing AdGuardDNSFilter.txt to .mrs..."
          echo "payload:" > temp.yaml
          grep '^||' "AdGuardDNSFilter.txt" \
            | grep -v '[*/?$]' \
            | sed 's/^||//; s/\^.*$//; s/^/- "+./; s/$/"/' >> temp.yaml

          if [ -s temp.yaml ]; then
            mihomo convert-ruleset domain yaml temp.yaml "AdGuardDNSFilter.mrs" || { echo "Conversion to .mrs failed"; exit 1; }
          else
            echo "No valid domains to convert to .mrs in AdGuardDNSFilter.txt."
          fi
          rm -f temp.yaml

          echo "Preparing RUAdList.txt to .mrs..."
          echo "payload:" > temp.yaml
          grep '^||' "RUAdList.txt" \
            | grep -v '[*/?$]' \
            | sed 's/^||//; s/\^.*$//; s/^/- "+./; s/$/"/' >> temp.yaml

          if [ -s temp.yaml ]; then
            mihomo convert-ruleset domain yaml temp.yaml "RUAdList.mrs" || { echo "Conversion to .mrs failed"; exit 1; }
          else
            echo "No valid domains to convert to .mrs in RUAdList.txt."
          fi
          rm -f temp.yaml

          echo "Converting Filter1.txt to .srs..."
          ./sing-box rule-set convert "Filter1.txt" --output "Filter1.srs" --type adguard || { echo "Conversion to .srs failed"; exit 1; }

          echo "Preparing Filter1.txt to .mrs..."
          echo "payload:" > temp.yaml
          grep '^||' "Filter1.txt" \
            | grep -v '[*/?$]' \
            | sed 's/^||//; s/\^.*$//; s/^/- "+./; s/$/"/' >> temp.yaml

          if [ -s temp.yaml ]; then
            mihomo convert-ruleset domain yaml temp.yaml "Filter1.mrs" || { echo "Conversion to .mrs failed"; exit 1; }
          else
            echo "No valid domains to convert to .mrs in Filter1.txt."
          fi
          rm -f temp.yaml

          cd ../..
          rm -rf binary/adguard && mkdir -p binary/adguard
          cp tmp/convert/*.srs tmp/convert/*.mrs binary/adguard/
          rm -rf tmp && ls -l binary/adguard

      - name: Configure Git
        run: |
          git config --global user.name "RichardMoor75"
          git config --global user.email "rishat.murtazin@gmail.com"

      - name: Check for Changes and Commit
        run: |
          git add binary/adguard
          if git diff --cached --quiet; then
            echo "No changes detected, skipping commit."
            echo "changes=false" >> $GITHUB_ENV
          else
            git commit -m "actions: Update AdGuard, RUAdList and Filter1 filters (srs & mrs)"
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Push Changes
        if: env.changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}
